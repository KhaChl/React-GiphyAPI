{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifListItem.js","components/GifList.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","placeholder","getGifs","a","url","encodeURI","fetch","res","json","data","gifs","map","id","title","images","downsized_medium","GifListItem","className","src","alt","GifList","imgs","loading","setImages","useEffect","then","useFetchGifs","img","key","GifApp","index","ReactDOM","render","document","getElementById"],"mappings":"+LAGaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAAkB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAY,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OACxCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAiBfG,YAAY,qB,uBCvBfC,EAAO,uCAAG,WAAON,GAAP,uBAAAO,EAAA,6DACbC,EADa,kDAFR,mCAEQ,cACgDC,UAAUT,GAD1D,sBAEDU,MAAMF,GAFL,cAEbG,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,YAClB,MAAQ,CACJC,GAFwE,EAAvDA,GAGjBC,MAHwE,EAAnDA,MAIrBT,IAJwE,EAA5CU,OAAUC,iBAAoBX,QAJ/C,kBAYZM,GAZY,4CAAH,sDCAPM,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAEjC,OACI,yBAAKa,UAAU,2CACX,yBAAKC,IAAKd,EAAKe,IAAKN,IACpB,2BAAIA,KCFT,SAASO,EAAT,GAAgC,IAAbxB,EAAY,EAAZA,SAAY,ECFV,SAACA,GAAc,IAAD,EACVR,mBACxB,CACIiC,KAAM,GACNC,SAAS,IAJqB,mBAC/BR,EAD+B,KACvBS,EADuB,KAoBtC,OAZAC,qBAAU,WACNtB,EAAQN,GACH6B,MAAK,SAAAJ,GAAI,OACNE,EACI,CACIF,KAAMA,EACNC,SAAS,SAI1B,CAAC1B,IAEGkB,EDhBmBY,CAAa9B,GAA/ByB,EAF0B,EAE1BA,KAAMC,EAFoB,EAEpBA,QAEd,OACI,oCACI,4BAAK1B,GACJ0B,GAAW,yBAAKL,UAAU,WAC3B,yBAAKA,UAAU,aAEPI,EAAKV,KAAI,SAAAgB,GAAG,OACR,kBAAC,EAAD,eACIC,IAAKD,EAAIf,IACLe,SEdzB,IAAME,EAAS,WAAO,IAAD,EAEQzC,mBAAS,IAFjB,mBAEjBQ,EAFiB,KAEPT,EAFO,KAIxB,OACI,oCACI,sCACA,kBAAC,EAAD,CAAaA,YAAaA,IAC1B,6BAEIS,EAASe,KAAI,SAACf,EAAUkC,GAAX,OACT,kBAACV,EAAD,CACIQ,IAAKE,EACLlC,SAAUA,SCXlCmC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9fba785e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategory }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategory(category => [inputValue, ...category]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Search all Gif\"\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired\r\n};","const apiKey = 'kMve6FBizwRUxZW2SjsQG8UyltoBUXu7';\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `http://api.giphy.com/v1/gifs/search?key=${apiKey}&q=${encodeURI(category)}&limit=10`;\r\n    const res = await fetch(url);\r\n    const { data } = await res.json();\r\n    const gifs = data.map(({ id, title, images: { downsized_medium: { url } } }) => {\r\n        return ({\r\n            id: id,\r\n            title: title,\r\n            url: url\r\n        });\r\n    });\r\n    \r\n    return gifs;\r\n};","import React from 'react';\r\n\r\nexport const GifListItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__flipInX\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifListItem } from './GifListItem';\r\n\r\nexport function GifList({ category }) {\r\n\r\n    const { imgs, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h2>{category}</h2>\r\n            {loading && <div className=\"loader\"></div>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    imgs.map(img =>\r\n                        <GifListItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nGifList.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n};","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [images, setImages] = useState(\r\n        {\r\n            imgs: [],\r\n            loading: true\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs =>\r\n                setImages(\r\n                    {\r\n                        imgs: imgs,\r\n                        loading: false\r\n                    }\r\n                )\r\n            );\r\n    }, [category]);\r\n\r\n    return images;\r\n};","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifList } from './components/GifList';\r\n\r\nexport const GifApp = () => {\r\n\r\n    const [category, setCategory] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <h1>GifAPP</h1>\r\n            <AddCategory setCategory={setCategory} />\r\n            <hr />\r\n            {\r\n                category.map((category, index) =>\r\n                    <GifList\r\n                        key={index}\r\n                        category={category}\r\n                    />\r\n                )\r\n            }\r\n        </>\r\n    );\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifApp } from './GifApp';\n\n\nReactDOM.render(\n  <GifApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}